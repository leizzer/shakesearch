{"version":3,"sources":["store/index.js","components/search-bar/index.jsx","components/text-block.jsx","utils.js","components/shake-it.jsx","components/quotes/accordion.jsx","components/quotes/index.jsx","components/title.jsx","components/loading.jsx","App.js","reportWebVitals.js","index.js","logo.svg"],"names":["StoreContext","createContext","initialState","query","fetching","quotes","found","reducer","state","action","type","Object","objectSpread","payload","length","Error","Form","styled","form","_templateObject","taggedTemplateLiteral","TextInput","input","attrs","_templateObject2","SubmitButton","button","_templateObject3","SearchBar","_ref","onSubmit","_useState","useState","_useState2","slicedToArray","value","setValue","onShake","samples","sample","Math","floor","random","useEffect","shakeDetector","ShakeDetector","threshold","debounceDelay","confirmPermissionGranted","start","window","addEventListener","SHAKE_EVENT","removeEventListener","react_default","a","createElement","id","event","preventDefault","autoFocus","name","placeholder","onChange","target","trim","TextBlock","div","text_block_templateObject","isMobile","test","navigator","userAgent","moveGradient","keyframes","shake_it_templateObject","ShakeEffect","shake_it_templateObject2","Mobile","Fragment","Desktop","ShakeIt","shake_it_Mobile","shake_it_Desktop","Collapsable","accordion_templateObject","props","selected","CollapsableContent","accordion_templateObject2","show","Quote","accordion_templateObject3","Snippet","p","_templateObject4","Accordion","isSelected","index","setSelected","document","getElementById","scrollIntoView","processText","text","regex","RegExp","concat","sanitize","replace","match","toUpperCase","map","quote","i","key","onClick","Work","className","Snippets","snippet","j","dangerouslySetInnerHTML","__html","Quotes","quotes_templateObject","List","quotes_templateObject2","_useContext$store","useContext","store","accordion","text_block","shake_it","Title","title_templateObject","Loading","App","_useReducer","useReducer","_useReducer2","dispatch","title","src_store","Provider","search_bar","callback","errCallback","axios","baseURL","process","REACT_APP_API","url","then","response","data","Data","catch","error","console","log","searchQuery","fetchSuccess","loading","components_quotes","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode","src_App_0","module","exports"],"mappings":"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","file":"static/js/main.a75aa0e5.chunk.js","sourcesContent":["import React, {createContext} from 'react'\n\nconst FETCH_SUCCESS = 'fetchSuccess'\nconst START_FETCH = 'startFetch'\nconst END_FETCH = 'endFetch'\nconst RESET = 'reset'\nconst SET_QUERY = 'setQuery'\n\nconst StoreContext = createContext()\n\nexport const initialState = {\n  query: null,\n  fetching: false,\n  quotes: [],\n  found: null\n}\n\nexport const reducer = (state, action) => {\n  switch (action.type) {\n    case SET_QUERY:\n      return {...state, query: action.payload}\n    case START_FETCH:\n      return {...state, fetching: true}\n    case END_FETCH:\n      return {...state, fetching: false}\n    case FETCH_SUCCESS:\n      return {...state, fetching: false, quotes: action.payload, found: action.payload.length}\n    case RESET:\n      return initialState\n    default:\n      throw new Error()\n  }\n}\n\nexport const setQuery = (query) => (\n  { type: SET_QUERY, payload: query }\n)\n\nexport const fetchSuccess = (response) => (\n  { type: FETCH_SUCCESS, payload: response }\n)\n\nexport const startFetch = () => (\n  { type: START_FETCH }\n)\n\nexport const endFetch = () => (\n  { type: END_FETCH }\n)\n\nexport default StoreContext\n","import React, { useEffect, useState, useContext } from 'react'\nimport styled from 'styled-components'\nimport ShakeDetector from 'shake-detector';\n\nconst Form = styled.form`\n  display: flex;\n  align-items: stretch;\n  padding: 2rem 2rem;\n  with: 100%;\n  justify-content: center;\n  align-content: space-between;\n\n  @media (max-width: 768px) {\n    width: 90%;\n    padding: 2rem 0px ;\n  }\n`\n\nconst TextInput = styled.input.attrs({\n  type: 'text'\n})`\n  font-size: 1.5rem;\n  align-self: auto;\n  width: 80%;\n  line-height: 4rem;\n  text-align: center;\n  color: #452f02;\n  background-color: #85a8bb;\n  border: none;\n  border-radius: 10px 0 0;\n\n  ::placeholder {\n    font-style: italic;\n  }\n\n  :focus {\n    outline: none;\n  }\n\n`\n\nconst SubmitButton = styled.button.attrs({\n  type: 'submit'\n})`\n  align-self: auto;\n  flex-basis: 20%;\n  font-size: 1.3rem;\n  color: #452f02;\n  background-color: #85a8bb;\n  border: none;\n  border-left: 2px solid #b3c8d5;\n  border-radius: 0 10px 0 0;\n  padding: 0px 10px;\n\n  :focus {\n    outline: none;\n  }\n\n  :active {\n    background-color: #154155;\n  }\n`\n\nconst SearchBar = ({ onSubmit }) => {\n  const [value, setValue] = useState('')\n\n  const onShake = () => {\n    if (value.length > 0) {\n      onSubmit(value)\n    } else {\n      const samples = [\n        \"love\",\n        \"Macbeth\",\n        \"Romeo\",\n        \"Othello\"\n      ]\n\n      const index = Math.floor(Math.random() * samples.length)\n      const sample = samples[index]\n\n      setValue(sample)\n      onSubmit(sample)\n    }\n  }\n\n  useEffect(() => {\n    const options = {\n      threshold: 8,\n      debounceDelay: 1000,\n    };\n\n    const shakeDetector = new ShakeDetector(options)\n\n    shakeDetector.confirmPermissionGranted();\n    shakeDetector.start();\n\n    window.addEventListener(ShakeDetector.SHAKE_EVENT, onShake);\n    return () => window.removeEventListener(ShakeDetector.SHAKE_EVENT, onShake);\n  }, [])\n\n  const handleChange = (event) => {\n    setValue(event.target.value.trim())\n  }\n\n  const handleSubmit = (event) => {\n    event.preventDefault()\n    onSubmit(value)\n  }\n\n  return (\n    <Form id=\"form\" onSubmit={handleSubmit}>\n      <TextInput\n        autoFocus\n        id=\"query\"\n        name=\"query\"\n        placeholder={\"Try writing Love\"}\n        value={value}\n        onChange={handleChange}\n      />\n      <SubmitButton>Search</SubmitButton>\n    </Form>\n  )\n}\n\nexport default SearchBar\n","import styled from 'styled-components'\n\nconst TextBlock = styled.div`\n  color: #e3c6a5;\n  font-family: 'Courier New', monospace;\n  font-size: 3vh;\n  margin: 4vw;\n`\n\nexport default TextBlock\n","export const doIfMobile = (lambda) => {\n  if (isMobile()) {\n    return lambda()\n  }\n}\n\nexport const isMobile = () => (\n  /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)\n)\n","import React from 'react'\nimport TextBlock from './text-block'\nimport {isMobile} from '../utils'\nimport styled, {keyframes} from 'styled-components'\n\nconst moveGradient = keyframes`\n  0% { transform: translate(1px, 1px) rotate(0deg); }\n  5% { transform: translate(-1px, -2px) rotate(-1deg); }\n  10% { transform: translate(-3px, 0px) rotate(1deg); }\n  15% { transform: translate(3px, 2px) rotate(0deg); }\n  20% { transform: translate(1px, -1px) rotate(1deg); }\n  25% { transform: translate(-1px, 2px) rotate(-1deg); }\n  30% { transform: translate(-3px, 1px) rotate(0deg); }\n  40% { transform: translate(0px, 0px) rotate(0deg); }\n  100% { transform: translate(0px, 0px) rotate(0deg); }\n`;\n\nconst ShakeEffect = styled(TextBlock)`\n  animation: ${moveGradient} 3s ease-out infinite;\n`\n\nconst Mobile = () => <>Shake it!<br/>Shake your device</>\nconst Desktop = () => <>Try it on mobile</>\n\nconst ShakeIt = () => <ShakeEffect>\n  {\n    isMobile() ? <Mobile /> : <Desktop />\n  }\n  <br/>\n  Shake Search!!\n</ShakeEffect>\n\nexport default ShakeIt\n","import React, {useEffect, useState}  from 'react'\nimport styled from 'styled-components'\nimport sanitize from 'sanitize-html'\n\nconst Collapsable = styled.div`\n  cursor: pointer;\n  color: #fbd88d;\n  text-align: left;\n  font-size: 1.5rem;\n  margin-bottom: 0.5rem;\n  background-color: ${(props) => props.selected ? '#1c5772' : '#324d5b' };\n  transition: background-color 400ms linear;\n  padding: 15px;\n\n  @media (max-width: 768px) {\n    font-size: 1.2rem;\n  }\n`\nconst CollapsableContent = styled.div`\n  margin-top: 1rem;\n  display: ${(props) => props.show ? 'block' : 'none'};\n`\n\nconst Quote = styled.div`\n  background-color: #324d5b;\n  text-align: left;\n  flex-basis: 100%;\n  margin: 2rem;\n  padding: 2rem 2rem 0.5rem 2rem;\n\n  @media (max-width: 768px) {\n    font-size: 1.2rem;\n    margin: 5px 0px;\n    padding: 10px;\n  }\n`\n\nconst Snippet = styled.p`\n  color: #fbd88d;\n`\n\nconst Accordion = ({quotes, query}) => {\n  const isSelected = (index) => index === selected\n  const [selected, setSelected] = useState()\n\n  useEffect(() => {\n    selected && document.getElementById(selected).scrollIntoView()\n  }, [selected])\n\n  const toggleSelect = (index) => {\n    let i =  index === selected ? null : index\n    setSelected(i)\n  }\n\n  const processText = (text) => {\n    const regex = new RegExp(`(?:\\r\\n|\\r|\\n|${query})`, 'gi')\n    return sanitize(text).replace(\n      regex,\n      (match) => (\n        match.toUpperCase() === query.toUpperCase() ?\n        `<span class=\"highlighted\">${match}</span>`\n        : '<br/>'\n      )\n    )\n  }\n\n  const list = quotes.map((quote, i) => (\n      <Collapsable key={i} id={i} selected={isSelected(i)} onClick={() => toggleSelect(i)}>\n        {quote.Work} <span className=\"highlighted\">({quote.Snippets.length})</span>\n\n        <CollapsableContent show={isSelected(i)}>\n          {isSelected(i) && quote.Snippets.map((snippet, j) => (\n            <Quote key={`${i}-${j}`}>\n              <Snippet  dangerouslySetInnerHTML={{__html: processText(snippet)}} />\n            </Quote>\n          ))}\n        </CollapsableContent>\n      </Collapsable>\n    ))\n\n  return list\n}\n\nexport default Accordion\n","import React, {useContext, useState, useEffect} from 'react'\nimport styled from 'styled-components'\nimport StoreContext from '../../store'\nimport ShakeItExp from '../shake-it'\nimport TextBlock from '../text-block'\nimport Accordion from './accordion'\n\nconst Quotes = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: stretch;\n  justification-content: center;\n  width: 80%;\n\n  @media (max-width: 768px) {\n    width: 90%;\n  }\n`\n\nconst Work = styled.p`\n  color: #a0d1e7;\n  text-align: center;\n  font-size: 1.2rem;\n  margin-top: 1rem;\n`\n\nconst List = () => {\n  const {store: {quotes, found, query}} = useContext(StoreContext)\n\n  return (\n    <Quotes>\n      {\n        quotes.length > 0 ?\n          <Accordion quotes={quotes} query={query}/>\n          : found === 0 ?\n            <TextBlock>... nothing.<br /> Try another word</TextBlock>\n            : <ShakeItExp/>\n      }\n    </Quotes>\n  )\n}\n\nexport default List\n","import styled from 'styled-components'\n\nconst Title = styled.p`\n  color: #facc6a;\n  line-height: 15vh;\n  font-size: 15vh;\n  font-family: 'Times New Roman', serif;\n  vertical-align: middle;\n  margin-top: 5vh;\n  margin-bottom: 2vh;\n`\n\nexport default Title\n","import React from \"react\"\nimport TextBlock from './text-block'\n\nconst Loading = () => <TextBlock>To find<br/> or <br/>Not to find...</TextBlock>\n\nexport default Loading\n","import React, {useReducer} from 'react'\nimport logo from './logo.svg'\nimport './App.css'\n\nimport StoreContext, {reducer, initialState, setQuery, startFetch, endFetch, fetchSuccess} from './store'\n\nimport SearchBar from './components/search-bar'\nimport QuotesList from './components/quotes'\nimport Title from './components/title'\nimport TextBlock from './components/text-block'\nimport Loading from './components/loading'\n\n// Axios\nimport axios from 'axios'\n\nconst searchQuery = (text, callback, errCallback) => axios({\n    baseURL: process.env.REACT_APP_API,\n    url:`search?q=${text}`\n  })\n  .then((response) => callback(response.data.Data || []))\n  .catch((error) => {\n    errCallback()\n    console.log('ERROR: ', error)\n  })\n\nconst App = () => {\n\n  const [store, dispatch] = useReducer(reducer, initialState)\n\n  const submitQuery = (text) => {\n    dispatch(startFetch())\n    dispatch(setQuery(text))\n\n    searchQuery(\n      text,\n      (response) => dispatch(fetchSuccess(response)),\n      () => dispatch(endFetch())\n    )\n  }\n\n  return (\n    <div className=\"App\">\n      <Title>\n        Shake Search\n      </Title>\n\n      <TextBlock>\n        Look for snippets containing\n        <br/>\n        <span className=\"highlighted\">a key word</span> in the complete works of\n        <br/>\n        William Shakespeare\n      </TextBlock>\n\n      <StoreContext.Provider value={{store, dispatch}}>\n        <SearchBar onSubmit={submitQuery}/>\n        {\n          store.fetching ? <Loading/> : <QuotesList />\n        }\n      </StoreContext.Provider>\n    </div>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","module.exports = __webpack_public_path__ + \"static/media/logo.06e73328.svg\";"],"sourceRoot":""}